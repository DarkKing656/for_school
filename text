int main(int argc, char *argv[]) {
    int opt;
    int case_insensitive = 0;
    int inverse_match = 0;
    int count_only = 0;
    int print_filename_only = 0;
    int line_number = 0;
    int quiet_mode = 0;
    int print_match_only = 0;
    int multiple_files=0;
    char *search_string = NULL;
    regex_t regex;
    int regex_option = 0;

    while ((opt = getopt(argc, argv, "isvclf:ne:")) != -1) {
        switch (opt) {
            case 'i':
                case_insensitive = 1;
                break;
            case 's':
                quiet_mode = 1;
                break;
            case 'v':
                inverse_match = 1;
                break;
            case 'c':
                count_only = 1;
                break;
            case 'l':
                print_filename_only = 1;
                break;
            case 'n':
                line_number = 1;
                break;
            case 'f':
                regex_option = 1;
                search_string = read_regex_from_file(optarg);
                break;
            case 'e':
                regex_option = 1;
                search_string = optarg;
                break;
            default:
                printf("Неизвестная опция: -%c\n", opt);
                return 1;
        }
    }

    if (search_string == NULL) {
        if (optind < argc) {
            search_string = argv[optind++];
        } else {
            printf("Использование: ./my_grep [-i|-s|-v|-c|-l|-n] [-f <файл_с_регулярным_выражением>|-e <регулярное_выражение>] [<файл>]\n");
            return 1;
        }
    }
    
    if (optind < argc) {
        for (int i = optind; i < argc; i++) {
            FILE *file_ptr = fopen(argv[i], "r");
            if (file_ptr == NULL) {
                printf("Не удалось открыть файл %s\n", argv[i]);
                return 1;
            }
            
            if (regex_option) {
                int compile_status;
                if (case_insensitive) {
                    compile_status = regcomp(&regex, search_string, REG_EXTENDED | REG_ICASE);
                } else {
                    compile_status = regcomp(&regex, search_string, REG_EXTENDED);
                }
                if (compile_status) {
                    char error_message[MAX_LINE_LENGTH];
                    regerror(compile_status, &regex, error_message, MAX_LINE_LENGTH);
                    printf("Ошибка компиляции регулярного выражения: %s\n", error_message);
                    return 1;
                }
            }

            search_file(file_ptr, search_string, case_insensitive, inverse_match, 
                        count_only, print_filename_only, line_number);
            
            fclose(file_ptr);
        }
    } else {
        search_file(stdin, search_string, case_insensitive, inverse_match, 
                    count_only, print_filename_only, line_number);
    }

    return 0;
}
